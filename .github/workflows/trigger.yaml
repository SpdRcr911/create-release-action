on: 
  push:
    # tags:
    # - v[0-9]+.[0-9]+.[0-9]+.[0-9]+
     
jobs:
  create-release:
    name: Create Release from Tag
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout Code
      uses: actions/checkout@v3
    -
      name: Contexts
      run: |
        echo '${{ github.event_name }}'
        echo '${{ toJSON(github.event) }}'
        echo '${{ github.job }}'
        echo '${{ github.sha }}'
        echo '${{ github.ref }}'
        echo '${{ github.ref_name }}'
        echo '${{ github.ref_protected }}'
        echo '${{ github.ref_type }}'
    - name: Get event_path info
      id: get_tag_path
      run: |
        git_tag_url=`jq --raw-output .repository.git_tags_url ${{ github.event_path }}`
        git_tag_sha=`jq --raw-output .after                   ${{ github.event_path }}`

        git_tag_path=${git_tag_url/\{\/sha\}/\/$git_tag_sha}
        echo $git_tag_url_with_sha        
        echo "::set-output name=git_tag_path::$git_tag_path"
    - name: Display event_path info
      run: |
        echo '${{ steps.get_event_path.outputs.git_tag_path }}'
    - name: Get tag message
      id: get_tag_message
      run: |
        message=`gh api ${{ steps.get_event_path.outputs.git_tag_path }} | jq --raw-output .message`
        echo "::set-output name=tag_message::$message"
    - name: Create release
      run: |
        echo '${{ steps.get_tag_message.outputs.tag_message }}'
    #     gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --generate-notes
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - 
    #   name: Setup .NET Core SDK
    #   uses: actions/setup-dotnet@v2.1.0
    # - 
    #   name: Build App
    #   run: |
    #     dotnet clean --nologo -v m
    #     dotnet restore --nologo -v m
    #     dotnet build --nologo -v m --no-restore
    #     dotnet test --no-build --no-restore
    # - 
    #   name: Run App
    #   run: |
    #     dotnet run --no-build --no-restore -- ${{ github.event_path }}
